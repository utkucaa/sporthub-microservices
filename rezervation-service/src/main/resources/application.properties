spring.application.name=reservation-service
server.port=8084

# Datasource
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/sporthub_rezervation?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:137127117}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Redis
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.session.store-type=redis

# Kafka
# Use host-mapped listener from docker-compose (PLAINTEXT_HOST://localhost:29092)
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
spring.kafka.consumer.group-id=reservation-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Config Server (disabled for now)
spring.cloud.config.enabled=false

# Allow circular references (temporary fix)
spring.main.allow-circular-references=true

# Eureka
eureka.client.service-url.defaultZone=http://localhost:8762/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}

# OpenFeign
feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000

# Resilience4j
resilience4j.circuitbreaker.instances.default.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.default.slidingWindowSize=10
resilience4j.circuitbreaker.instances.default.failureRateThreshold=50

# Spring Cloud compatibility check
spring.cloud.compatibility-verifier.enabled=false

# Security - handled at API Gateway; no local resource server

# Actuator
management.endpoints.web.exposure.include=health,info,metrics,loggers
management.endpoint.health.show-details=always

# Logging
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.com.sporthub.reservation=DEBUG

# Kafka Topics
sporthub.kafka.topic.reservationCreated=reservation-created
sporthub.kafka.topic.reservationConfirmed=reservation-confirmed
sporthub.kafka.topic.reservationCancelled=reservation-cancelled
sporthub.kafka.topic.paymentCompleted=payment-completed
sporthub.kafka.topic.notificationRequired=notification-required

# Redis keys TTLs (seconds)
sporthub.reservation.lock.ttl-seconds=30
sporthub.reservation.cache.availability-ttl-seconds=60

