# Server Configuration
server.port=8087

# Spring Application Configuration
spring.application.name=notification-service

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/sporthub_notification
spring.datasource.username=root
spring.datasource.password=137127117
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true

# Email Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:your-email@gmail.com}
spring.mail.password=${MAIL_PASSWORD:your-app-password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=notification-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.sporthub.notification.dto,com.sporthub.user.dto,com.sporthub.reservation.dto,com.sporthub.payment.dto
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Eureka Configuration
eureka.client.service-url.defaultZone=http://localhost:8762/eureka
eureka.instance.hostname=localhost

# Custom Notification Properties
notification.email.from=${NOTIFICATION_FROM_EMAIL:noreply@sporthub.com}
notification.email.from-name=${NOTIFICATION_FROM_NAME:SportHub}
notification.sms.provider=${SMS_PROVIDER:twilio}
notification.sms.api-key=${SMS_API_KEY:your-sms-api-key}
notification.sms.account-sid=${TWILIO_ACCOUNT_SID:your-account-sid}
notification.sms.auth-token=${TWILIO_AUTH_TOKEN:your-auth-token}
notification.sms.from-number=${TWILIO_FROM_NUMBER:+1234567890}
notification.push.firebase.service-account-path=${FIREBASE_SERVICE_ACCOUNT:firebase-service-account.json}
notification.retry.max-attempts=3
notification.retry.delay=30000
notification.cleanup.retention-days=90

# Management Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always

# Logging Configuration
logging.level.com.sporthub.notification=DEBUG
logging.level.org.springframework.kafka=INFO
logging.level.org.springframework.mail=DEBUG
